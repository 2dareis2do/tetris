{"version":3,"sources":["stores/GridsterStore.js","dispatcher/AppDispatcher.js","constants/GridsterConstants.js","stores/StartGrid.js","stores/OrganTables.js","components/Button.jsx","components/GridItem.jsx","actions/GridsterActions.js","components/Grid.jsx","components/GridWidget.jsx","components/UncontrolledLottie.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["AppDispatcher","action","this","dispatch","source","Dispatcher","GridsterConstants","StartGrid","_store","columns","rows","grid","shapes","name","shape","width","height","transformations","ninety","oneeighty","twoseventy","threesixty","transformationsa","transformations2","currentItem","timer","state","angle","score","interval","highScore","audioUnlocked","GridsterStore","cb","on","removeListener","EventEmitter","audioCtx","AudioContext","tables","c","real","length","Float32Array","imag","i","x","sharkFinValues","Array","Math","log","pow","ft","DFT","forward","gameInterval","lfoTable","createPeriodicWave","oscillator","createOscillator","enabled","lfo","lfoGain","createGain","playAudio","resume","frequency","value","setPeriodicWave","gain","connect","destination","start","console","onstatechange","setTimeout","suspend","ycoord","number","parseInt","paintItem","items","item","splice","checkOutsideColumn","currentValue","checkColumnInset","turnClockwise","currentShape","sort","a","b","tempCurrent","map","filter","element","undefined","sum","transformCurrentShapeNinety","moveCurrent","transformCurrentShapeOneEighty","transformCurrentShapeTwoSeventy","transformCurrentShapeThreeSixty","turnAnticlockwise","transformCurrentShapeTwoSeventyAnti","transformCurrentShapeThreeSixtyAnti","transformCurrentShapeNinetyAnti","transformCurrentShapeOneEightyAnti","num","array","newNumber","includes","chooseRandomShape","randShape","floor","random","paintShape","shapeWidth","startx","starty","startz","startxx","forEach","paintShapeItem","index","arr","limit","currentItemIndex","push","currentItemIndexSecondLine","unPaintShapeItem","moveLeft","initialCurrentLength","moveLeftCurrent","moveRight","moveRightCurrent","addTop","unshift","dropDown","addGravity","dropDownOne","dropNext","slice","updatePaintShape","checkFilledRows","tempGrid","tempLength","temp","count","j","localStorage","setItem","tempLength2","decreaseInterval","startTimer","startGame","clearInterval","window","setInterval","startTimerCallback","moveDown","emit","register","payload","actionType","total","newCells","Infinity","clickIndex","findIndex","obj","id","clicked","end","enterIndex","exitIndex","key","keyMap","getItem","Button","props","_onMouseEnter","bind","_onMouseLeave","_onMouseDown","event","setState","itemColour","onMouseEnter","onMouseLeave","onMouseDown","type","onClick","onclick","disabled","style","borderRadius","border","padding","color","fontSize","cursor","background","text","Component","GridItem","_widthCalc","_onChange","_onClick","addChangeListener","getGrid","removeChangeListener","target","handleViewAction","display","float","paddingBottom","outline","ulStyle","listStyleType","margin","Grid","inputValidation","GridWidget","_onChangeCols","_onChangeRows","_onGenerateGrid","_onGravity","_onRight","_onKeyDown","handleTouchStart","xDown","yDown","xPos","yPos","timerOn","timerStart","timerTime","document","addEventListener","handleTouchMove","indexOf","keyCode","preventDefault","removeEventListener","e","touches","clientX","clientY","xUp","yUp","xDiff","yDiff","abs","_onLeft","_onRotateClockwise","updateRow","code","className","_onRotateAnticlockwise","_startGame","UncontrolledLottie","defaultOptions","loop","autoplay","animationData","rendererSettings","scaleMode","options","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","controller","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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AAW,KACX,MAAW,KACX,MAAW,KACX,MAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,OACX,MAAW,KACX,MAAW,KACX,MAAW,KACX,MAAW,KACX,MAAW,KACX,MAAW,KACX,MAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,OACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,OACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,EACA,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,GAAW,EACtB,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAEF,KAAQ,CACN,EACA,SAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,MACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,KACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW,GAAW,EACtwDTC,EAAID,EAAOE,KAAKC,OAClBD,EAAO,IAAIE,aAAaH,GACxBI,EAAO,IAAID,aAAaH,GACnBK,EAAI,EAAGA,EAAIL,EAAGK,IACrBJ,EAAKI,GAAKN,EAAOE,KAAKI,GACtBD,EAAKC,GAAKN,EAAOK,KAAKC,GAexB,IAFA,IATkBC,EAUdC,EAAiB,IAAIC,MADb,KAEHH,EAAI,EAAGA,EAFJ,IAEeA,IACzBE,EAAeF,IAZCC,EAYaD,EAHnB,KARF,EAAU,GAClBC,EAAQ,EAAJA,EAAQ,EAAI,KACR,EACC,EAAIG,KAAKC,IAAIJ,GAAK,EAEpBG,KAAKE,KAAKL,GAAI,GAWvB,IAAIM,EAAK,IAAIC,MAAIN,EAAeL,QAChCU,EAAGE,QAAQP,GACX,IA8hCIQ,EA9hCAC,EAAWnB,EAASoB,mBAAmBL,EAAGX,KAAMW,EAAGR,MAKjDc,EAAarB,EAASsB,mBACxBC,GAAU,EAOVC,EAAMxB,EAASsB,mBACfG,EAAUzB,EAAS0B,aAEvB,SAASC,KAEgB,cAAnB3B,EAASX,OAAyBkC,EACpCvB,EAAS4B,SAEmB,cAAnB5B,EAASX,OAElBgC,EAAWQ,UAAUC,MAAQ,KAE7BN,EAAIO,gBAAgBZ,GACpBK,EAAIK,UAAUC,MAAQ,EAAI,IAG1BL,EAAQO,KAAKF,MAAQ,IAErBN,EAAIS,QAAQR,GACZA,EAAQQ,QAAQZ,EAAWQ,WAC3BR,EAAWY,QAAQjC,EAASkC,aAG5Bb,EAAWc,MAAM,GACjBX,EAAIW,MAAM,GAGVZ,GAAU,GAEVa,QAAQvB,IAAI,OAAQb,EAASX,OAsB/BW,EAASqC,cAAgB,WACvBD,QAAQvB,IAAIb,EAASX,QAGvBiD,YAAW,WACTtC,EAASuC,YACR,KAcL,SAASC,GAAOC,GACd,OAAQ,EAAIC,SAASD,EAAStE,EAAOC,QAAS,IAMhD,SAASuE,GAAUC,EAAOpC,EAAGqC,GAE3B,OADAD,EAAME,OAAOtC,EAAG,EAAGqC,GACZD,EAkBT,SAASG,GAAmBC,GAC1B,GAAIA,EAAe7E,EAAOC,UAAY,IAAM4E,EAAe,GAAK7E,EAAOC,UAAY,EACjF,OAAO4E,EAOX,SAASC,GAAiBD,GACxB,IAAKA,EAAe,GAAK7E,EAAOC,UAAY,IAAM4E,EAAe,GAAK7E,EAAOC,UAAY,EACvF,OAAO4E,EAOX,SAASE,KACP,IAAIzE,EAAQN,EAAOM,MACfa,EAAQnB,EAAOmB,MAGf6D,EAAehF,EAAOgB,YAAYiE,MAAK,SAASC,EAAGC,GAAK,OAAOD,EAAIC,KAEnEC,EAAcJ,EAAaK,IAAIP,IAMnC,MAJAM,EAAcA,EAAYE,QAAO,SAASC,GACxC,YAAmBC,IAAZD,MAGOrD,QAAU,OAO1BkD,GAFAA,EAAcJ,EAAaK,IAAIT,KAELU,QAAO,SAASC,GACxC,YAAmBC,IAAZD,MAEOrD,QAAU,GAI1B,OAAQf,GACN,KAAK,EAIH,IAAIsE,EAAMT,EAAaK,IAAIK,GAA6B,CACtDpF,MAAOA,IAETmF,EAAMA,EAAIH,QAAO,SAASC,GACxB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,GAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAEd,MACF,KAAK,GASHA,GAJAA,EAAMT,EAAaK,IAAIO,GAAgC,CACrDtF,MAAOA,KAGCgF,QAAO,SAASC,GACxB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,IAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAEd,MACF,KAAK,IAOHA,GAJAA,EAAMT,EAAaK,IAAIQ,GAAiC,CACtDvF,MAAOA,KAGCgF,QAAO,SAASC,GACxB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,IAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAEd,MACF,KAAK,IAOHA,GAJAA,EAAMT,EAAaK,IAAIS,GAAiC,CACtDxF,MAAOA,KAGCgF,QAAO,SAASC,GACxB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,EAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAGd,MACF,QACEzF,EAAOmB,MAAQ,GAQrB,SAAS4E,KACP,IAAIzF,EAAQN,EAAOM,MACfa,EAAQnB,EAAOmB,MAGf6D,EAAehF,EAAOgB,YAAYiE,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KAEpEC,EAAcJ,EAAaK,IAAIP,IAMnC,MAJAM,EAAcA,EAAYE,QAAO,SAAUC,GACzC,YAAmBC,IAAZD,MAGOrD,QAAU,OAO1BkD,GAFAA,EAAcJ,EAAaK,IAAIT,KAELU,QAAO,SAAUC,GACzC,YAAmBC,IAAZD,MAEOrD,QAAU,GAI1B,OAAQf,GACN,KAAK,EAIH,IAAIsE,EAAMT,EAAaK,IAAIW,GAAqC,CAC9D1F,MAAOA,IAETmF,EAAMA,EAAIH,QAAO,SAAUC,GACzB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,IAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAEd,MACF,KAAK,GAOHA,GAJAA,EAAMT,EAAaK,IAAIY,GAAqC,CAC1D3F,MAAOA,KAGCgF,QAAO,SAAUC,GACzB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,EAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAEd,MACF,KAAK,IAOHA,GAJAA,EAAMT,EAAaK,IAAIa,GAAiC,CACtD5F,MAAOA,KAGCgF,QAAO,SAAUC,GACzB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,GAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAEd,MACF,KAAK,IAOHA,GAJAA,EAAMT,EAAaK,IAAIc,GAAoC,CACzD7F,MAAOA,KAGCgF,QAAO,SAAUC,GACzB,YAAmBC,IAAZD,KAETvF,EAAOmB,MAAQ,IAKI,IAAfsE,EAAIvD,QACNyD,GAAYF,GAGd,MACF,QACEzF,EAAOmB,MAAQ,GASrB,SAASuE,GAA4BU,EAAK/D,EAAGgE,GAG3C,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOG,gBAAgBC,OAErB2B,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EAQX,SAASJ,GAAgCE,EAAK/D,EAAGgE,GAG/C,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOQ,iBAAiBJ,OAEtB2B,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EAQX,SAASV,GAA+BQ,EAAK/D,EAAGgE,GAG9C,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOG,gBAAgBE,UAErB0B,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EAQX,SAASH,GAAmCC,EAAK/D,EAAGgE,GAGlD,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOQ,iBAAiBH,UAEtB0B,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EASX,SAAST,GAAgCO,EAAK/D,EAAGgE,GAC/C,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOG,gBAAgBG,WAErByB,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EAQX,SAASN,GAAoCI,EAAK/D,EAAGgE,GACnD,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOQ,iBAAiBF,WAEtByB,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EAQX,SAASR,GAAgCM,EAAK/D,EAAGgE,GAG/C,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOG,gBAAgBI,WAErBwB,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EAQX,SAASL,GAAoCG,EAAK/D,EAAGgE,GACnD,IAAI/F,EAAQZ,KAAKY,MAIbgG,EAAYF,EAFKpG,EAAOI,OAAOE,GAAOQ,iBAAiBD,WAEtBwB,GAErC,OAAIrC,EAAOgB,YAAYuF,SAASD,GACvBA,EAC6B,IAA3BtG,EAAOG,KAAKmG,IAGZA,EAAatG,EAAOC,QAAUD,EAAOE,UAD9C,EAKOoG,EAQX,SAASE,KACP,IAAIC,EAAYhE,KAAKiE,MAAOjE,KAAKkE,SAAW3G,EAAOI,OAAO8B,QAG1D,OAFAlC,EAAOM,MAAQmG,EACfzG,EAAOmB,MAAQ,EACRsF,EAUT,SAASG,GAAWvE,GAClB,IAAI/B,EAAQN,EAAOI,OAAOiC,GAAG/B,MACzBuG,EAAa7G,EAAOI,OAAOiC,GAAG9B,MAC9BuG,EAASvC,SAASvE,EAAOC,QAAU,GAEnC8G,GADJD,GAAkBvC,SAASsC,EAAa,IAClB,EAClBG,EAASF,EAAS,EAClBG,EAAUH,EAAS,EAGvB,GAA4B,IAAxB9G,EAAOG,KAAK2G,IAAyC,IAAxB9G,EAAOG,KAAK4G,IAAyC,IAAxB/G,EAAOG,KAAK6G,IAA0C,IAAzBhH,EAAOG,KAAK8G,GAErG,OAwbFjH,EAAOkB,MAAQ,OAEf+C,QAAQvB,IAAI,aAxbVpC,EAAM4G,QAAQC,GAAgB,CAAEL,OAAQA,EAAQzE,EAAGA,IAQvD,SAAS8E,GAAezC,EAAM0C,EAAOC,GACnC,IAAIP,EAASpH,KAAKoH,OACdzE,EAAI3C,KAAK2C,EACTiF,EAAQtH,EAAOC,QAAUD,EAAOE,KACpC,GAAIkH,EAAQpH,EAAOI,OAAOiC,GAAG9B,MAAO,CAClC,IAAIgH,EAAmBH,EAAQN,EAClB,IAATpC,GACEA,EAAO4C,IACTtH,EAAOgB,YAAYwG,KAAKD,GACxB/C,GAAUxE,EAAOG,KAAMoH,EAAkB7C,QAGxC,CACL,IAAI+C,EAA6BzH,EAAOC,QAAUD,EAAOI,OAAOiC,GAAG9B,MAAQ6G,EAAQN,EACtE,IAATpC,GACEA,EAAO4C,IACTtH,EAAOgB,YAAYwG,KAAKC,GACxBjD,GAAUxE,EAAOG,KAAMsH,EAA4B/C,KA+B3D,SAASgD,GAAiBhD,EAAM0C,EAAOC,GAEjC3C,GAAQ,GACVF,GAAUxE,EAAOG,KAAMuE,EAAM,GAQjC,SAASiD,KACP,GAAkC,IAA9B3H,EAAOgB,YAAYkB,OAAc,CACnC,IAAI0F,EAAuB5H,EAAOgB,YAAYkB,OAE1CkD,EADoBpF,EAAOgB,YAAYiE,MAAK,SAASC,EAAGC,GAAK,OAAOA,EAAID,KACxCG,IAAIwC,IAWpCD,KAVJxC,EAAcA,EAAYE,QAAO,SAASC,GACxC,YAAmBC,IAAZD,MAEgCrD,QAQvCyD,GAAYP,IASlB,SAAS0C,KACP,GAAkC,IAA9B9H,EAAOgB,YAAYkB,OAAc,CACnC,IAAI0F,EAAuB5H,EAAOgB,YAAYkB,OAE1CkD,EADoBpF,EAAOgB,YAAYiE,MAAK,SAASC,EAAGC,GAAK,OAAOA,EAAID,KACxCG,IAAI0C,IAYpCH,KAVJxC,EAAcA,EAAYE,QAAO,SAASC,GACxC,YAAmBC,IAAZD,MAEgCrD,QAQvCyD,GAAYP,IAgBlB,SAAS4C,KAEP,IADA,IAAI/H,EAAUD,EAAOC,QACZoC,EAAI,EAAGA,EAAIpC,EAASoC,IAC3BrC,EAAOG,KAAK8H,QAAQ,GAqFxB,SAASC,KAE2B,IAA9BlI,EAAOgB,YAAYkB,OApDzB,WAaE,IATA,IAMIkD,EANoBpF,EAAOgB,YAAYiE,MAAK,SAASC,EAAGC,GAAK,OAAOA,EAAID,KASnE7C,EAAI,EAAGA,GAAKrC,EAAOE,KAAMmC,IAAK,CAMrC,GAA2B,KAJ3B+C,GADAA,EAAcA,EAAYC,IAAI8C,KACJ7C,QAAO,SAASC,GACxC,YAAmBC,IAAZD,MAGOrD,OAId,OAHAyD,GAAYP,IAiCdgD,GAEAC,KA2BJ,SAAS1C,GAAYP,GACNpF,EAAOgB,YAjMRkG,QAAQQ,IAkMpB1H,EAAOgB,YAAcoE,EAAYkD,MAAM,GApNzC,SAA0BtH,GAExBA,EAAYkG,SAEZ,SAA8BxC,EAAM0C,EAAOC,GACzC,IAAIC,EAAQtH,EAAOC,QAAUD,EAAOE,KAEhCwE,EAAO4C,GAAS5C,GADH,GAEfF,GAAUxE,EAAOG,KAAMuE,EAAM,MA6MjC6D,CAAiBvI,EAAOgB,aAM1B,SAASqH,KAEPrI,EAAOgB,YAAYkB,OAAS,EAa9B,SAASsG,IAIP,IAHA,IAAIC,EAAWzI,EAAOG,KAGbkC,EAAI,EAAGA,EAAIrC,EAAOE,KAAMmC,IAAK,CASpC,IAPA,IAAIqG,EAAaD,EAASvG,OAEtByG,EAAOF,EAASH,MAAMI,GAAe1I,EAAOC,QAAUoC,EAAKrC,EAAOC,SAAUyI,EAAc1I,EAAOC,QAAUoC,GAG3GuG,EAAQ,EAEHC,EAAI,EAAGA,EAAI7I,EAAOC,QAAS4I,IAAK,CAGzB,IADFF,EAAKL,MAAOK,EAAKzG,OAAS,EAAK2G,GAAG,KAE5CD,GAAgB,GAOpB,GAAc,KAAVA,EAAc,CAChB3E,QAAQvB,IAAI,eACZ1C,EAAOoB,MAAQpB,EAAOoB,MAAQ,GAC1BpB,EAAOoB,MAAQpB,EAAOsB,YACxBtB,EAAOsB,UAAYtB,EAAOoB,MAC1B0H,aAAaC,QAAQ,YAAa/I,EAAOsB,WAEzC2C,QAAQvB,IAAI,mBAEd,IAAIsG,EAAchJ,EAAOG,KAAK+B,OAC9BlC,EAAOG,KAAKwE,OAAOqE,GAAgBhJ,EAAOC,QAAUoC,EAAKrC,EAAOC,SAAUD,EAAOC,SAEjFuD,KACAwE,KACAiB,KAEAC,KAEAV,MArDJA,GAKA5B,GADgBJ,MA4DlB,SAAS2B,GAAWzD,EAAM0C,EAAOC,GAC/B,IAAIC,EAAQtH,EAAOC,QAAUD,EAAOE,KACpC,GAAIwE,EAAQ1E,EAAOG,KAAK+B,OAASlC,EAAOC,QAEtC,GAAID,EAAOgB,YAAYuF,SAAS7B,EAAO1E,EAAOC,UAC5C,GAAIyE,EAAO1E,EAAOC,QAAUqH,EAC1B,OAAc5C,EAAO1E,EAAOC,YAEzB,CACL,GAA2C,IAAvCD,EAAOG,KAAKuE,EAAO1E,EAAOC,SAK5B,OAJA,GAAIyE,EAAO1E,EAAOC,QAAUqH,EAC1B,OAAc5C,EAAO1E,EAAOC,SAetC,SAAS4H,GAAgBnD,EAAM0C,EAAOC,GAUpC,OAAIrH,EAAOgB,YAAYuF,SAAS7B,EAAO,IAIjCA,EAAO1E,EAAOC,UAAY,GAEE,IAA1BD,EAAOG,KAAKuE,EAAO,GALXA,EAAO,OAWnB,EASN,SAASqD,GAAiBrD,EAAM0C,EAAOC,GACrC,OAAIrH,EAAOgB,YAAYuF,SAAS7B,EAAO,KAIhCA,EAAO,GAAK1E,EAAOC,UAAY,GAEJ,IAA1BD,EAAOG,KAAKuE,EAAO,GALXA,EAAO,OAWnB,EASN,SAASyE,KAEP3F,KAgBAxD,EAAOG,KAAOJ,EAAUuI,MAAM,GAb9BtI,EAAOoB,MAAQ,EAEfpB,EAAOkB,MAAQ,EAgDflB,EAAOqB,SAAW,IACdrB,EAAOiB,MAAQ,GACjBmI,cAAcrG,GA9ChB6D,GADgBJ,MAmClB,SAASyC,KACPjJ,EAAOqB,SAAWrB,EAAOqB,SAA8B,GAAlBrB,EAAOqB,SAE5C+H,cAAcrG,GAkBhB,SAASmG,KACPnG,EAAesG,OAAOC,YAAYC,GAAoBvJ,EAAOqB,UAM/D,SAASkI,KACc,IAAjBvJ,EAAOkB,QACTlB,EAAOiB,MAAQjB,EAAOiB,MAAQ,EArVlC,WACE,GAAkC,IAA9BjB,EAAOgB,YAAYkB,OAAc,CACnC,IAAI0F,EAAuB5H,EAAOgB,YAAYkB,OAE1CkD,EADoBpF,EAAOgB,YAAYiE,MAAK,SAASC,EAAGC,GAAK,OAAOA,EAAID,KACxCG,IAAI8C,IAYpCP,KAVJxC,EAAcA,EAAYE,QAAO,SAASC,GACxC,YAAmBC,IAAZD,MAEgCrD,OAQvCyD,GAAYP,GAEZiD,MAmUFmB,GACAhI,EAAciI,KAryCG,WAi1CrBjK,EAAckK,UAAS,SAACC,GAEtB,IA3gCcrF,EA2gCR7E,EAASkK,EAAQlK,OAEvB,OAAQA,EAAOmK,YAEb,KAAK9J,EAEHE,EAAOG,KAAKqH,KAAK/H,EAAOkE,OACxBnC,EAAciI,KA11CC,UA41Cf,MAEF,KAAK3J,EAEHE,EAAOE,KAAOT,EAAOkE,MACrBnC,EAAciI,KAj2CC,UAk2Cf,MAEF,KAAK3J,EAEHE,EAAOC,QAAUR,EAAOkE,MACxBnC,EAAciI,KAv2CC,UAw2Cf,MAEF,KAAK3J,EAECE,EAAOkB,MAAQ,GACjBgH,KAEF1G,EAAciI,KA/2CC,UAg3Cf,MAEF,KAAK3J,EAECE,EAAOkB,MAAQ,GACjB4G,KAEFtG,EAAciI,KAv3CC,UAw3Cf,MAEF,KAAK3J,EAECE,EAAOkB,MAAQ,GACjByG,KAEFnG,EAAciI,KA/3CC,UAg4Cf,MAEF,KAAK3J,EAECE,EAAOkB,MAAQ,GACjB6E,KAEFvE,EAAciI,KAv4CC,UAw4Cf,MAEF,KAAK3J,EAECE,EAAOkB,MAAQ,GACjB6D,KAEFvD,EAAciI,KA/4CC,UAg5Cf,MAEF,KAAK3J,EAEHqJ,KACAD,KAEA1H,EAAciI,KAv5CC,UAw5Cf,MAEF,KAAK3J,EAMH,IAJA,IAAI+J,EAAQ7J,EAAOC,QAAUD,EAAOE,KAEhC4J,EAAW,GAENzH,EAAI,EAAGA,EAAIwH,EAAOxH,IACzByH,EAAStC,KAAK,CAAE,GAAMnF,EAAG,QAAW,QAAS,MAAS,UAAW,GAzlCzDiC,EAylCqEjC,EAxlC3E,EAAMiC,EAAStE,EAAOC,SAwlCyD,EAAKoE,GAAOhC,GAAI,KAAQ,KAAM,MAAQ,EAAO,QAAW0H,MAG3I/J,EAAOG,KAAO2J,EAEdtI,EAAciI,KAt6CC,UAu6Cf,MAEF,KAAK3J,EAEH,IAAIkK,EAAahK,EAAOG,KAAK8J,WAAW,SAAAC,GAAG,OAAIA,EAAIC,KAAO5F,SAAS9E,EAAOkE,MAAO,OAEzC,UAApC3D,EAAOG,KAAK6J,GAAYI,SAAuBJ,IAAehK,EAAOgE,MAAMmG,IAAMH,IAAehK,EAAOqK,IAAIF,GAC7GnK,EAAOG,KAAK6J,GAAYI,QAAU,OACW,SAApCpK,EAAOG,KAAK6J,GAAYI,SAAsBJ,IAAehK,EAAOgE,MAAMmG,IAAMH,IAAehK,EAAOqK,IAAIF,KACnHnK,EAAOG,KAAK6J,GAAYI,QAAU,SAIpC5I,EAAciI,KAp7CC,UAs7Cf,MAGF,KAAK3J,EAEH,IAAIwK,EAAatK,EAAOG,KAAK8J,WAAW,SAAAC,GAAG,OAAIA,EAAIC,KAAO5F,SAAS9E,EAAOkE,MAAO,OAEjF3D,EAAOG,KAAKmK,GAAYpJ,MAAQ,QAEhCM,EAAciI,KA/7CC,UAi8Cf,MAEF,KAAK3J,EAEH,IAAIyK,EAAYvK,EAAOG,KAAK8J,WAAW,SAAAC,GAAG,OAAIA,EAAIC,KAAO5F,SAAS9E,EAAOkE,MAAO,OAEhF3D,EAAOG,KAAKoK,GAAWrJ,MAAQ,UAE/BM,EAAciI,KAz8CC,UA08Cf,MAEF,KAAK3J,EAMH0B,EAAciI,KAl9CC,UAm9Cf,MAEF,KAAK3J,GAvKT,SAAgB0K,GACd,OAAQA,GACN,IAAK,QACCxK,EAAOkB,MAAQ,GACjBgH,KAEF,MACF,IAAK,YACClI,EAAOkB,MAAQ,GACjB6D,KAEF,MACF,IAAK,UACC/E,EAAOkB,MAAQ,GACjB6E,KAEF,MACF,IAAK,YACC/F,EAAOkB,MAAQ,GACjByG,KAEF,MACF,IAAK,aACC3H,EAAOkB,MAAQ,GACjB4G,KAEF,MACF,WA+IE2C,CAAOhL,EAAO+K,KAEdhJ,EAAciI,KA19CC,UA29Cf,MAEF,KAAK3J,EA5OPE,EAAOsB,UAAYwH,aAAa4B,QAAQ,cAAgB,IAiPpDlJ,EAAciI,KAl+CC,UAm+Cf,MAGF,QACE,WAKSjI,SKjgDMmJ,G,YAEnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAEpB,EAAK5J,MAAQ,CACXA,MAAO,WAPQ,E,2EAYL+J,GACZ,OAAOvL,KAAKwL,SAAS,CAAChK,MAAO,Y,oCAGjB+J,GACZ,OAAOvL,KAAKwL,SAAS,CAAChK,MAAO,c,mCAGlB+J,GACX,OAAOvL,KAAKwL,SAAS,CAAChK,MAAO,W,+BAK7B,IAAIiK,EAAa,UAWjB,MAVyB,YAArBzL,KAAKwB,MAAMA,QACbiK,EAAa,WAEU,UAArBzL,KAAKwB,MAAMA,QACbiK,EAAa,WAEU,SAArBzL,KAAKwB,MAAMA,QACbiK,EAAa,WAKX,4BACEC,aAAc1L,KAAKmL,cACnBQ,aAAc3L,KAAKqL,cACnBO,YAAa5L,KAAKsL,aAClBO,KAAK,SACLC,QAAS9L,KAAKkL,MAAMa,QACpBC,SAAUhM,KAAKkL,MAAMc,SACrBC,MAAO,CAEHC,aAAc,QACdC,OAAQ,iBACRC,QAAS,cACTC,MAAO,QACPC,SAAU,OAGVC,OAAQ,UACRC,WAAYf,IACfzL,KAAKkL,MAAMuB,U,GA3DcC,a,ICIfC,G,YAEnB,WAAYzB,GAAQ,IAAD,8BACjB,4CAAMA,KACD0B,WAAa,EAAKA,WAAWxB,KAAhB,gBAClB,EAAKyB,UAAY,EAAKA,UAAUzB,KAAf,gBACjB,EAAK0B,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAKD,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAEpB,EAAK5J,MAAQ,CACXjB,QAAS,EACTC,KAAM,IAXS,E,iFAgBjBsB,GAAciL,kBAAkB/M,KAAK6M,WACrC7M,KAAKwL,SAAS1J,GAAckL,a,6CAI5BlL,GAAcmL,qBAAqBjN,KAAK6M,a,kCAIxC7M,KAAKwL,SAAS1J,GAAckL,a,iCAGpBpK,GACV,OAAO,IAAMA,I,+BAGJ2I,GCXJ,IAAuBtH,IDYZsH,EAAM2B,OAAOzC,GCX7B3K,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,EACZ6D,MAAOA,M,oCDaKsH,GCTT,IAAoBtH,IDUZsH,EAAM2B,OAAOzC,GCT1B3K,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,EACZ6D,MAAOA,M,oCDUKsH,GCNT,IAAmBtH,IDOZsH,EAAM2B,OAAOzC,GCNzB3K,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,EACZ6D,MAAOA,M,mCDOIsH,GCHR,IAAmBtH,IDIZsH,EAAM2B,OAAOzC,GCHzB3K,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,EACZ6D,MAAOA,M,+BDMP,IAAIwH,EAAa,2BAMlB,YAJyB3F,IAApB9F,KAAKwB,MAAMf,MAA0C,IAApBT,KAAKkL,MAAMuB,OAC9ChB,EAAa,qBAKf,wBACEhB,GAAIzK,KAAKkL,MAAMT,GAMfwB,MAAO,CACLmB,QAAS,eACTC,MAAO,OACPxM,MAAOb,KAAK4M,WAAW5M,KAAKwB,MAAMjB,SAAS,IAC3CiM,WAAYf,EACZc,OAAQ,UACRe,cAAetN,KAAK4M,WAAW5M,KAAKwB,MAAMjB,SAAS,IACnDgN,QAAS,sC,GA3EqBb,aEHhCc,GAAU,CACfJ,QAAS,eACTC,MAAO,OACPxM,MAAO,OACP4M,cAAe,OACfrB,QAAS,EACTsB,OAAQ,GAGYC,G,iLAET,IAAD,OAIJnN,EAAO,GAaV,OAZKR,KAAKkL,MAAM1K,KAAOR,KAAKkL,MAAM3K,QAAW,GAI3CP,KAAKkL,MAAMzK,KAAKkF,KAAI,SAACX,EAAM0C,GAEzB,OAAOlH,EAAKsH,KACf,kBAAC,GAAD,CAAUgD,IAAKpD,EAAO+C,GAAI/C,EAAO+E,KAAM,EAAKvB,MAAMzK,KAAKiH,SAMxD,wBAAIuE,MAAOuB,IACThN,O,GArB4BkM,aCJlC,SAASkB,GAAgB3J,GAEvB,MAAoB,kBAAVA,IAELA,GAAS,IAAMA,EAAQ,G,IAUT4J,G,YAEnB,WAAY3C,GAAQ,IAAD,8BACjB,4CAAMA,KACD4C,cAAgB,EAAKA,cAAc1C,KAAnB,gBACrB,EAAK2C,cAAgB,EAAKA,cAAc3C,KAAnB,gBACrB,EAAKyB,UAAY,EAAKA,UAAUzB,KAAf,gBACjB,EAAK4C,gBAAkB,EAAKA,gBAAgB5C,KAArB,gBACvB,EAAK6C,WAAa,EAAKA,WAAW7C,KAAhB,gBAClB,EAAK8C,SAAW,EAAKA,SAAS9C,KAAd,gBAChB,EAAK+C,WAAa,EAAKA,WAAW/C,KAAhB,gBAClB,EAAKgD,iBAAmB,EAAKA,iBAAiBhD,KAAtB,gBACxB,EAAKiD,MAAQ,KACb,EAAKC,MAAQ,KACb,EAAKC,KAAO,KACZ,EAAKC,KAAO,KACZ,EAAKhN,MAAQ,CACXjB,QAAS,GACTC,KAAM,GACNC,KAAM,GACNgO,SAAS,EACTC,WAAY,EACZC,UAAW,GFqEf7O,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,IEnEZwO,SAASC,iBAAiB,UAAW,EAAKV,WAAW/C,KAAhB,iBACrCwD,SAASC,iBAAiB,aAAc,EAAKT,iBAAiBhD,KAAtB,iBAAkC,GAC1EwD,SAASC,iBAAiB,YAAa,EAAKC,gBAAgB1D,KAArB,iBAAiC,GAExEzB,OAAOkF,iBAAiB,WAAW,SAAStD,GAEvC,CAAC,GAAI,GAAI,GAAI,GAAI,IAAIwD,QAAQxD,EAAMyD,UAAY,GAChDzD,EAAM0D,oBAEP,GAhCc,E,iFAmEjBnN,GAAciL,kBAAkB/M,KAAK6M,WACrC7M,KAAKwL,SAAS1J,GAAckL,a,6CAI1B4B,SAASM,oBAAoB,UAAWlP,KAAKmO,WAAW/C,KAAKpL,OAC7D4O,SAASM,oBAAoB,aAAclP,KAAKoO,iBAAiBhD,KAAKpL,OACtE4O,SAASM,oBAAoB,YAAalP,KAAK8O,gBAAgB1D,KAAKpL,OAEpE2J,OAAOuF,oBAAoB,WAAW,SAASC,GAE1C,CAAC,GAAI,GAAI,GAAI,GAAI,IAAIJ,QAAQI,EAAEH,UAAY,GAC1CG,EAAEF,oBAEP,GACHnN,GAAcmL,qBAAqBjN,KAAK6M,a,kCAIxC7M,KAAKwL,SAAS1J,GAAckL,a,oCAGhBzB,GACZ,IAAItH,EAAQY,SAAS0G,EAAM2B,OAAOjJ,MAAO,IACrC2J,GAAgB3J,IAClBjE,KAAKwL,SAAS,CACZhL,KAAMyD,M,uCAKKsH,GACfA,EAAM0D,iBAENjP,KAAKqO,MAAS9C,EAAM6D,QAAQ,GAAGC,QAC/BrP,KAAKsO,MAAQ/C,EAAM6D,QAAQ,GAAGE,U,sCAGjB/D,GAEfA,EAAM0D,iBAECjP,KAAKqO,OAAWrO,KAAKsO,QAI5BtO,KAAKuP,IAAMhE,EAAM6D,QAAQ,GAAGC,QAC5BrP,KAAKwP,IAAMjE,EAAM6D,QAAQ,GAAGE,QAE5BtP,KAAKyP,MAAQzP,KAAKqO,MAAQrO,KAAKuP,IAC/BvP,KAAK0P,MAAQ1P,KAAKsO,MAAQtO,KAAKwP,IAE1BzM,KAAK4M,IAAK3P,KAAKyP,OAAU1M,KAAK4M,IAAK3P,KAAK0P,OACpC1P,KAAKyP,MAAQ,EAGdzP,KAAK4P,UAKL5P,KAAKkO,WAGJlO,KAAK0P,MAAQ,EAGd1P,KAAK6P,qBAKL7P,KAAKiO,aAIbjO,KAAKqO,MAAQ,KACbrO,KAAKsO,MAAQ,Q,oCAGC/C,GACZ,IAAItH,EAAQY,SAAS0G,EAAM2B,OAAOjJ,MAAO,IACrC2J,GAAgB3J,IACpBjE,KAAKwL,SAAS,CACZjL,QAAS0D,M,wCF5KR,IAAsBA,IEkLZjE,KAAKwB,MAAMjB,QFjL1BT,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,EACZ6D,MAAOA,IAIJ,SAAmBA,GACxBnE,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,EACZ6D,MAAOA,IEyKP6L,CAAU9P,KAAKwB,MAAMhB,MF9JvBV,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,IAiCdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,IAKdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,M,mCAKdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,M,iCAKdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,M,gCAKdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,M,2CAKdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,M,+CAKdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,M,mCAKdN,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,M,iCE+GH+O,GF3GN,IAAiBrE,IE4GZqE,EAAEY,KF3GZjQ,EAAcqN,iBAAiB,CAC7BjD,WAAY9J,EACZ0K,IAAKA,M,+BE6GL,IAAMpH,EAAU1D,KAAKwB,MAAMA,MAAQ,EACnC,OACE,yBAAKwO,UAAU,aACb,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,SAAhB,UAAgChQ,KAAKwB,MAAME,MAA3C,KACA,0BAAMsO,UAAU,eAAhB,eAA2ChQ,KAAKwB,MAAMI,WACtD,0BAAMoO,UAAU,kBACd,kBAAC,GAAD,CAAQvD,KAAK,OAAOV,QAAS/L,KAAK4P,UAClC,kBAAC,GAAD,CAAQnD,KAAK,QAAQV,QAAS/L,KAAKkO,WACnC,kBAAC,GAAD,CAAQzB,KAAK,OAAOV,QAAS/L,KAAKiO,aAClC,kBAAC,GAAD,CAAQxB,KAAK,YAAYV,QAAS/L,KAAK6P,qBACvC,kBAAC,GAAD,CAAQpD,KAAK,gBAAgBV,QAAS/L,KAAKiQ,yBAE3C,kBAAC,GAAD,CAAQxD,KAAK,QAAQT,UAAWtI,EAASqI,QAAS/L,KAAKkQ,eAI3D,yBAAKF,UAAU,mBAGb,kBAAC,GAAD,CACEvP,KAAMT,KAAKwB,MAAMf,KAAMF,QAAQ,KAAKC,KAAK,a,GAxNbkM,a,6BCGzByD,G,iLAjBX,IAAMC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,GACfC,iBAAkB,CAChBC,UAAW,YAIf,OACE,yBAAKT,UAAW,cACd,kBAAC,KAAD,CAAQU,QAASN,S,GAhBQ1D,aC6BlBiE,G,iLAvBX,OAAS,yBAAKX,UAAY,OAMxB,wBAAIA,UAAY,aAAhB,YAKA,mFACA,yBAAKA,UAAU,oBACb,kBAAC,GAAD,OAGA,kBAAC,GAAD,CAAYzP,QAAU,KACxBC,KAAO,Y,GAnBKkM,aCEZkE,GAAcC,QACW,cAA7BlH,OAAOmH,SAASC,UAEe,UAA7BpH,OAAOmH,SAASC,UAEhBpH,OAAOmH,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPpH,SAASkH,GACTG,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBhN,cAAgB,WACA,cAA3BgN,EAAiBhQ,QACf2P,UAAUC,cAAcM,WAK1BnN,QAAQvB,IAAI,6CAKZuB,QAAQvB,IAAI,4CAMrB2O,OAAM,SAAAC,GACLrN,QAAQqN,MAAM,4CAA6CA,MCzEjEC,IAASC,OAAO,kBAAC,GAAD,MAASlD,SAASmD,eAAe,SDclC,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIC,IAAwBtI,OAAOmH,UAC3CoB,SAAWvI,OAAOmH,SAASoB,OAIvC,OAGFvI,OAAOkF,iBAAiB,QAAQ,WAC9B,IAAMqC,EAAK,UAAMe,IAAN,sBAEPrB,KAiDV,SAAiCM,GAE/BiB,MAAMjB,GACHG,MAAK,SAAAe,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBxD,QAAQ,cAG7CoC,UAAUC,cAAcoB,MAAMnB,MAAK,SAAAC,GACjCA,EAAamB,aAAapB,MAAK,WAC7B1H,OAAOmH,SAAS4B,eAKpBzB,GAAgBC,MAGnBS,OAAM,WACLpN,QAAQvB,IACN,oEArEA2P,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAMnB,MAAK,WACjC9M,QAAQvB,IACN,gHAMJiO,GAAgBC,OCzCxB0B,I","file":"static/js/main.ac4da805.chunk.js","sourcesContent":["// Gridster store\n// Requiring the Dispatcher, Constants, and\n// event emitter dependencies\nimport AppDispatcher from '../dispatcher/AppDispatcher';\nimport { GridsterConstants } from '../constants/GridsterConstants.js';\nimport { EventEmitter } from 'events';\nimport { StartGrid } from './StartGrid';\nimport { OrganTables } from './OrganTables';\nimport { DFT } from 'dsp.js';\n\n// import '../webkitAudioContextMonkeyPatch';\nimport { AudioContext } from 'standardized-audio-context';\n// var dft = new DFT(1024, 44100);\n// console.log(dft);\n\n// console.log(window.AudioContext);\n// import MIDISounds from 'midi-sounds-react';\n\n\n// console.log(MIDISounds);\n// const test = new MIDISounds;\n\n// EventEmitter.prototype._maxListeners = 400;\n\nconst CHANGE_EVENT = 'change';\n\n// Define the store as an empty array\nlet _store = {\n  columns: 10,\n  rows: 20,\n  grid: StartGrid,\n  shapes: [{\n      name: 'pipe',\n      shape: [1, 1, 1, 1],\n      width: 4,\n      height: 1,\n      transformations: {\n        ninety: [-9, 0, 9, 18],\n        oneeighty: [11, 0, -11, -22],\n        twoseventy: [-18, -9, 0, 9],\n        threesixty: [22, 11, 0, -11]\n      },\n      transformationsa: {\n        ninety: [-9, 0, 9, 18],\n        oneeighty: [11, 0, -11, -22],\n        twoseventy: [-18, -9, 0, 9],\n        threesixty: [22, 11, 0, -11]\n      },\n      transformations2: {\n        ninety: [\n          [-1, 1],\n          [0, 0],\n          [1, -1],\n          [2, -2]\n        ],\n        oneeighty: [\n          [1, 1],\n          [0, 0],\n          [-1, -1],\n          [-2, -2]\n        ],\n        twoseventy: [\n          [-2, 2],\n          [-1, -1],\n          [0, 1],\n          [1, -1]\n        ],\n        threesixty: [\n          [2, 2],\n          [1, 1],\n          [0, 1],\n          [-1, -1]\n        ]\n      }\n    },\n    {\n      name: 'J',\n      shape: [1, 1, 1, 0, 0, 1],\n      width: 3,\n      height: 2,\n      transformations: {\n        ninety: [-9, 0, 9, -2],\n        oneeighty: [11, 0, -20, -11],\n        twoseventy: [2, -9, 0, 9],\n        threesixty: [11, 20, 0, -11]\n      },\n      transformationsa: {\n        ninety: [20, 11, 0, -11],\n        oneeighty: [9, -2, 0, -9],\n        twoseventy: [11, 0, -11, -20],\n        threesixty: [9, 0, 2, -9]\n      },\n    },\n    {\n      name: 'L',\n      shape: [1, 1, 1, 1, 0, 0],\n      width: 3,\n      height: 2,\n      transformations: {\n        ninety: [-9, 0, 9, -20],\n        oneeighty: [2, 11, 0, -11],\n        twoseventy: [20, -9, 0, 9],\n        threesixty: [11, 0, -11, -2]\n      },\n      transformationsa: {\n        ninety: [-2, 11, 0, -11],\n        oneeighty: [9, 0, -9, -20],\n        twoseventy: [11, 0, -11, 2],\n        threesixty: [20, 9, 0, -9]\n      },\n    },\n    {\n      name: 'T',\n      shape: [1, 1, 1, 0, 1, 0],\n      width: 3,\n      height: 2,\n      transformations: {\n        ninety: [-9, 0, 9, -11],\n        oneeighty: [11, -9, 0, -11],\n        twoseventy: [11, -9, 0, 9],\n        threesixty: [11, 0, 9, -11]\n      },\n      transformationsa: {\n        ninety: [9, 11, 0, -11],\n        oneeighty: [9, 0, -11, -9],\n        twoseventy: [11, 0, -11, -9],\n        threesixty: [9, 11, 0, -9]\n      },\n      transformations2: {\n        ninety: [\n          [-1, 1],\n          [0, 0],\n          [1, -1],\n          [2, -2]\n        ],\n        oneeighty: [\n          [1, 1],\n          [0, 0],\n          [-1, -1],\n          [-2, -2]\n        ],\n        twoseventy: [\n          [-2, 2],\n          [-1, -1],\n          [0, 1],\n          [1, -1]\n        ],\n        threesixty: [\n          [2, 2],\n          [1, 1],\n          [0, 1],\n          [-1, -1]\n        ]\n      }\n    },\n    {\n      name: 'square',\n      shape: [1, 1, 1, 1],\n      width: 2,\n      height: 2,\n      transformations: {\n        ninety: [0, 0, 0, 0],\n        oneeighty: [0, 0, 0, 0],\n        twoseventy: [0, 0, 0, 0],\n        threesixty: [0, 0, 0, 0]\n      },\n      transformationsa: {\n        ninety: [0, 0, 0, 0],\n        oneeighty: [0, 0, 0, 0],\n        twoseventy: [0, 0, 0, 0],\n        threesixty: [0, 0, 0, 0]\n      },\n      transformations2: {\n        ninety: [\n          [-1, 1],\n          [0, 0],\n          [1, -1],\n          [2, -2]\n        ],\n        oneeighty: [\n          [1, 1],\n          [0, 0],\n          [-1, -1],\n          [-2, -2]\n        ],\n        twoseventy: [\n          [-2, 2],\n          [-1, -1],\n          [0, 1],\n          [1, -1]\n        ],\n        threesixty: [\n          [2, 2],\n          [1, 1],\n          [0, 1],\n          [-1, -1]\n        ]\n      }\n    }\n  ],\n  currentItem: [],\n  timer: 0,\n  state: 0,\n  angle: 0,\n  shape: null,\n  score: 0,\n  interval: 1000,\n  highScore: 0,\n  audioUnlocked: false,\n};\n\n// Define the public event listeners and getters that\n// the views will use to listen for changes and retrieve\n// the store\nclass GridsterStoreClass extends EventEmitter {\n\n  addChangeListener(cb) {\n    this.on(CHANGE_EVENT, cb);\n  }\n\n  removeChangeListener(cb) {\n    this.removeListener(CHANGE_EVENT, cb);\n  }\n\n  getGrid() {\n    return _store;\n  }\n\n}\n\n// Initialize the singleton to register with the\n// dispatcher and export for React components\nconst GridsterStore = new GridsterStoreClass();\n\n// var isUnlocked = false;\n// var buffer;\n// var source;\n\nconst audioCtx = new AudioContext();\n// const gainNode = audioCtx.createGain();\n\n// Source: https://chromium.googlecode.com/svn/trunk/samples/audio/wave-tables/Organ_2\nvar tables = OrganTables;\n\nconst c = tables.real.length;\nvar real = new Float32Array(c);\nvar imag = new Float32Array(c);\nfor (let i = 0; i < c; i++) {\n  real[i] = tables.real[i];\n  imag[i] = tables.imag[i];\n}\n\n// sharkfin shape\nfunction sharkFin(x) {\n  if (x < 0) return 0;\n  x = x * 2 % 2 + 0.05;\n  if (x < 1) {\n    return 1 + Math.log(x) / 4;\n  }\n  return Math.pow(-x, -2);\n}\n\nvar count = 128;\nvar sharkFinValues = new Array(count);\nfor (let i = 0; i < count; i++) {\n  sharkFinValues[i] = sharkFin(i / count);\n}\n// console.log(sharkFinValues);\n\n// DFT\nvar ft = new DFT(sharkFinValues.length);\nft.forward(sharkFinValues);\nvar lfoTable = audioCtx.createPeriodicWave(ft.real, ft.imag);\n// var lfoGain = audioCtx.createGain();\n// var hornTable = audioCtx.createPeriodicWave(real, imag);\n\n// create Oscillator and gain node\nconst oscillator = audioCtx.createOscillator();\nvar enabled = false;\n// const real = new Float32Array([0, 0.4, 0.4, 1, 1, 1, 0.3, 0.7, 0.6, 0.5, 0.9, 0.8]);\n// const imag = new Float32Array(real.length);\n// console.log(real, real.length, imag);\n// const hornTable = audioCtx.createPeriodicWave(real, imag);\n// console.log(hornTable);\n\nvar lfo = audioCtx.createOscillator();\nvar lfoGain = audioCtx.createGain();\n\nfunction playAudio() {\n\n  if (audioCtx.state === 'suspended' && enabled) {\n    audioCtx.resume();\n\n  } else if (audioCtx.state === 'suspended') {\n\n    oscillator.frequency.value = 1200;\n\n    lfo.setPeriodicWave(lfoTable);\n    lfo.frequency.value = 1 / 0.380;\n\n    //lfogain\n    lfoGain.gain.value = 450;\n\n    lfo.connect(lfoGain);\n    lfoGain.connect(oscillator.frequency)\n    oscillator.connect(audioCtx.destination);\n\n    // oscillator.connect(audioCtx.destination);\n    oscillator.start(0);\n    lfo.start(0);\n\n    // run once\n    enabled = true;\n  } else {\n    console.log('else', audioCtx.state);\n\n  }\n  // let audioCtx = new AudioContext();\n\n\n  // create Oscillator and gain node\n  // let oscillator = audioCtx.createOscillator();\n  // let oscillatorNode = new OscillatorNode(audioCtx);\n  // let gainNode = audioCtx.createGain();\n  // console.log(audioCtx.currentTime);\n\n  // oscillator.connect(gainNode);\n  // oscillator.connect(audioCtx.destination);\n\n  // oscillator.type = 'sine';\n  // oscillator.frequency.value = 440;\n  // oscillator.start();\n\n  // gainNode.gain.value = 0.1;\n\n\n  audioCtx.onstatechange = function() {\n    console.log(audioCtx.state);\n  }\n\n  setTimeout(function() {\n    audioCtx.suspend();\n  }, 1000);\n}\n\n\n// function stop() {\n//   osc = window.audioContext.createOscillator();\n\n//   osc.disconnect();\n// }\n\nfunction xcoord(number) {\n  return (1 + ((number % _store.columns)));\n}\n\nfunction ycoord(number) {\n  return (1 + parseInt(number / _store.columns, 10));\n}\n\n/*\n * accepts a an array of @items representing the grid or stage and paints an @item (1 or 0) using the index i\n */\nfunction paintItem(items, i, item) {\n  items.splice(i, 1, item);\n  return items;\n}\n\n// function playTestInstrument() {\n//   // playChordNow(instrument, pitches, duration)\n//   // this.midiSounds.playChordNow(608, [60], 2.5);\n//   //looads array of drums\n//   // mSounds.playDrumsNow([0]);\n// }\n\n/*\n * accepts a an item from and array of @items representing the grid or stage and paints an @item (0) using the index i\n */\n// const removeItem = (items, i) =>\n//   items.slice(0, i - 1).concat(items.slice(i, items.length));\n/*\n * returns if valus is not in\n */\nfunction checkOutsideColumn(currentValue) {\n  if (currentValue % _store.columns !== 0 && (currentValue + 1) % _store.columns !== 0) {\n    return currentValue;\n  }\n}\n\n/*\n * returns the value in not on the inset column i.e. the second and second last columns\n */\nfunction checkColumnInset(currentValue) {\n  if ((currentValue - 1) % _store.columns !== 0 && (currentValue + 2) % _store.columns !== 0) {\n    return currentValue;\n  }\n}\n\n/*\n * moves the current item clockwise\n */\nfunction turnClockwise() {\n  let shape = _store.shape;\n  let angle = _store.angle;\n  // lets restrict movement if certain conditions\n  // sort curent shape low to high - transform matrix is always calculated form ther first item to the last\n  let currentShape = _store.currentItem.sort(function(a, b) { return a - b });\n  // console.log(currentShape);\n  let tempCurrent = currentShape.map(checkColumnInset);\n  // lets remove items that return undefined\n  tempCurrent = tempCurrent.filter(function(element) {\n    return element !== undefined;\n  });\n  // if not a pipe in column 1 return\n  if (tempCurrent.length <= 0) {\n    return;\n  }\n  // We also check if the shape has 3 elements in the first column\n  // if current shape has 3 or more items that are in column 0 return\n  tempCurrent = currentShape.map(checkOutsideColumn);\n  // remeber all shapes have 4 items\n  tempCurrent = tempCurrent.filter(function(element) {\n    return element !== undefined;\n  });\n  if (tempCurrent.length <= 1) {\n    return;\n  }\n\n  switch (angle) {\n    case 0:\n      // let transformArray = _store.shapes[shape].transformations.ninety;\n      // console.log(\"transformArray\", transformArray);\n      // takes the current transform array and adds it to the current array\n      let sum = currentShape.map(transformCurrentShapeNinety, {\n        shape: shape\n      });\n      sum = sum.filter(function(element) {\n        return element !== undefined;\n      });\n      _store.angle = 90;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n      break;\n    case 90:\n      // transformArray = _store.shapes[shape].transformations.oneeighty;\n      // console.log(\"transformArray\", transformArray);\n\n      // takes the current transform array and adds it to the current array\n      sum = currentShape.map(transformCurrentShapeOneEighty, {\n        shape: shape\n      });\n      // console.log(sum);\n      sum = sum.filter(function(element) {\n        return element !== undefined;\n      });\n      _store.angle = 180;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n      break;\n    case 180:\n      // transformArray = _store.shapes[shape].transformations.twoseventy;\n      // takes the current transform array and adds it to the current array\n      sum = currentShape.map(transformCurrentShapeTwoSeventy, {\n        shape: shape\n      });\n      // console.log(sum);\n      sum = sum.filter(function(element) {\n        return element !== undefined;\n      });\n      _store.angle = 270;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n      break;\n    case 270:\n      // transformArray = _store.shapes[shape].transformations.threesixty;\n      // takes the current transform array and adds it to the current array\n      sum = currentShape.map(transformCurrentShapeThreeSixty, {\n        shape: shape\n      });\n      // console.log(sum);\n      sum = sum.filter(function(element) {\n        return element !== undefined;\n      });\n      _store.angle = 0;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n\n      break;\n    default:\n      _store.angle = 0;\n\n  }\n}\n\n/*\n * moves the current item clockwise\n */\nfunction turnAnticlockwise() {\n  let shape = _store.shape;\n  let angle = _store.angle;\n  // lets restrict movement if certain conditions\n  // sort curent shape low to high - transform matrix is always calculated form ther first item to the last\n  let currentShape = _store.currentItem.sort(function (a, b) { return a - b });\n  //  console.log(currentShape);\n  let tempCurrent = currentShape.map(checkColumnInset);\n  // lets remove items that return undefined\n  tempCurrent = tempCurrent.filter(function (element) {\n    return element !== undefined;\n  });\n  // if not a pipe in column 1 return\n  if (tempCurrent.length <= 0) {\n    return;\n  }\n  // We also check if the shape has 3 elements in the first column\n  // if current shape has 3 or more items that are in column 0 return\n  tempCurrent = currentShape.map(checkOutsideColumn);\n  // remember all shapes have 4 items\n  tempCurrent = tempCurrent.filter(function (element) {\n    return element !== undefined;\n  });\n  if (tempCurrent.length <= 1) {\n    return;\n  }\n  // console.log(angle);\n  switch (angle) {\n    case 0:\n      // let transformArray = _store.shapes[shape].transformations.ninety;\n      // takes the current transform array and adds it to the current array\n      // opposite for anti\n      let sum = currentShape.map(transformCurrentShapeTwoSeventyAnti, {\n        shape: shape\n      });\n      sum = sum.filter(function (element) {\n        return element !== undefined;\n      });\n      _store.angle = 270;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n      break;\n    case 90:\n      // transformArray = _store.shapes[shape].transformations.oneeighty;\n      // takes the current transform array and adds it to the current array\n      sum = currentShape.map(transformCurrentShapeThreeSixtyAnti, {\n        shape: shape\n      });\n      // console.log(sum);\n      sum = sum.filter(function (element) {\n        return element !== undefined;\n      });\n      _store.angle = 0;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n      break;\n    case 180:\n      // transformArray = _store.shapes[shape].transformations.twoseventy;\n      // takes the current transform array and adds it to the current array\n      sum = currentShape.map(transformCurrentShapeNinetyAnti, {\n        shape: shape\n      });\n      // console.log(sum);\n      sum = sum.filter(function (element) {\n        return element !== undefined;\n      });\n      _store.angle = 90;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n      break;\n    case 270:\n      // transformArray = _store.shapes[shape].transformations.threesixty;\n      // takes the current transform array and adds it to the current array\n      sum = currentShape.map(transformCurrentShapeOneEightyAnti, {\n        shape: shape\n      });\n      // console.log(sum);\n      sum = sum.filter(function (element) {\n        return element !== undefined;\n      });\n      _store.angle = 180;\n      // need to check if 'new' summed array\n      // 2. is on the stage\n      // 1. does not match a value that already exists\n      // note if exists in current array transform value should be fine\n      if (sum.length === 4) {\n        moveCurrent(sum);\n      }\n\n      break;\n    default:\n      _store.angle = 0;\n\n  }\n}\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeNinety(num, i, array) {\n  // console.log(array);\n  // console.log(\"direction\", direction)\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformations.ninety;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item  return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeNinetyAnti(num, i, array) {\n  // console.log(array);\n  // console.log(\"direction\", direction)\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformationsa.ninety;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item  return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeOneEighty(num, i, array) {\n  // console.log(array);\n  // console.log(\"direction\", direction)\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformations.oneeighty;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeOneEightyAnti(num, i, array) {\n  // console.log(array);\n  // console.log(\"direction\", direction)\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformationsa.oneeighty;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeTwoSeventy(num, i, array) {\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformations.twoseventy;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item  return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeTwoSeventyAnti(num, i, array) {\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformationsa.twoseventy;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item  return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeThreeSixty(num, i, array) {\n  // console.log(array);\n  // console.log(\"direction\", direction)\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformations.threesixty;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item  return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n/*\n * Accepts an number and transforms this based on its shape and position\n * also accept @param shape\n */\nfunction transformCurrentShapeThreeSixtyAnti(num, i, array) {\n  let shape = this.shape;\n  // let currentShape = array;\n  let transformArray = _store.shapes[shape].transformationsa.threesixty;\n  // here we can check if transformed array is valid?\n  let newNumber = num + transformArray[i];\n  // if new number is the same as an existiong current item  return new number is\n  if (_store.currentItem.includes(newNumber)) {\n    return newNumber;\n  } else if (_store.grid[newNumber] === 1) {\n    // console.log('not', newNumber);\n    return;\n  } else if (newNumber > (_store.columns * _store.rows)) {\n    // console.log('not > max', newNumber);\n    return;\n  } else {\n    return newNumber;\n  }\n}\n\n/*\n * returns a random number depending on the amount of items in the _store.shapes array\n * stores random number that represents the index of teh shape in the _store.shape field\n */\nfunction chooseRandomShape() {\n  let randShape = Math.floor((Math.random() * _store.shapes.length));\n  _store.shape = randShape;\n  _store.angle = 0;\n  return randShape;\n}\n\n// function isOdd(num) { return num % 2; }\n\n/*\n * takes a integer representing the array count of the random shape\n * enables look up of shape based on matching array id\n * paints this shape on the canvas\n */\nfunction paintShape(i) {\n  let shape = _store.shapes[i].shape;\n  let shapeWidth = _store.shapes[i].width;\n  let startx = parseInt(_store.columns / 2);\n  startx = startx - parseInt(shapeWidth / 2);\n  let starty = startx - 1;\n  let startz = startx + 1;\n  let startxx = startx + 2;\n\n  // stop game if startx is not available\n  if (_store.grid[startx] === 1 || _store.grid[starty] === 1 || _store.grid[startz] === 1 || _store.grid[startxx] === 1) {\n    stopGame();\n    return;\n  } else {\n    shape.forEach(paintShapeItem, { startx: startx, i: i });\n  }\n}\n\n/*\n * used by paintShape to Map a random shape @array onto canvas\n * also stores current shape in currentItem\n */\nfunction paintShapeItem(item, index, arr) {\n  let startx = this.startx;\n  let i = this.i;\n  let limit = _store.columns * _store.rows;\n  if (index < _store.shapes[i].width) {\n    let currentItemIndex = index + startx;\n    if (item === 1) {\n      if (item < limit) {\n        _store.currentItem.push(currentItemIndex);\n        paintItem(_store.grid, currentItemIndex, item)\n      }\n    }\n  } else {\n    let currentItemIndexSecondLine = _store.columns - _store.shapes[i].width + index + startx;\n    if (item === 1) {\n      if (item < limit) {\n        _store.currentItem.push(currentItemIndexSecondLine);\n        paintItem(_store.grid, currentItemIndexSecondLine, item)\n      }\n    }\n\n  }\n}\n/*\n * used to update an array from grid or canvas\n * takes and array of items @currentItem - loops through and paints on the canvas\n */\nfunction updatePaintShape(currentItem) {\n\n  currentItem.forEach(updatePaintShapeItem)\n\n  function updatePaintShapeItem(item, index, arr) {\n    let limit = _store.columns * _store.rows;\n    let lowerLimit = 0;\n    if (item < limit && item >= lowerLimit) {\n      paintItem(_store.grid, item, 1);\n    }\n  }\n\n}\n\n/*\n *  accepts an array of values and removes them from the grid - sets to 0\n */\nfunction unPaintShape(currentItem) {\n  currentItem.forEach(unPaintShapeItem)\n}\n\nfunction unPaintShapeItem(item, index, arr) {\n  // make sure item is positive\n  if (item >= 0) {\n    paintItem(_store.grid, item, 0);\n  }\n}\n\n/**\n * This function moves everything on the canvas to the left\n * Updates the state in the store\n */\nfunction moveLeft() {\n  if (_store.currentItem.length !== 0) {\n    let initialCurrentLength = _store.currentItem.length;\n    let sortedCurrentItem = _store.currentItem.sort(function(a, b) { return b - a });\n    let tempCurrent = sortedCurrentItem.map(moveLeftCurrent);\n    tempCurrent = tempCurrent.filter(function(element) {\n      return element !== undefined;\n    });\n    let processedCurrentLength = tempCurrent.length;\n    /*\n    // check length of new array is the same as initially set\n    // if there is a difference it implies that the current\n    // block cannot move so we should stop leave as is and\n    // render a new random shape\n    */\n    if (initialCurrentLength === processedCurrentLength) {\n      moveCurrent(tempCurrent);\n    }\n  }\n}\n\n/**\n * This function moves everything on the canvas to the left\n * Updates the state in the store\n */\nfunction moveRight() {\n  if (_store.currentItem.length !== 0) {\n    let initialCurrentLength = _store.currentItem.length;\n    let sortedCurrentItem = _store.currentItem.sort(function(a, b) { return b - a });\n    let tempCurrent = sortedCurrentItem.map(moveRightCurrent);\n    //remove items where value is undefined\n    tempCurrent = tempCurrent.filter(function(element) {\n      return element !== undefined;\n    });\n    let processedCurrentLength = tempCurrent.length;\n    /*\n    // check length of new array is the same as initially set\n    // if there is a difference it implies that the current\n    // block cannot move so we should stop leave as is and\n    // render a new random shape\n    */\n    if (initialCurrentLength === processedCurrentLength) {\n      moveCurrent(tempCurrent);\n    }\n  }\n}\n\n/*\n * this is where we remove cells from bottom or end\n */\n// function removeBottom() {\n//   _store.grid.splice((_store.columns * _store.rows) - _store.columns - 1, _store.columns);\n// }\n\n/**\n * Adds a row of blanks cells to the start of the _store.grid\n * depending on the amount of columns in the grid\n */\nfunction addTop() {\n  let columns = _store.columns;\n  for (let i = 0; i < columns; i++) {\n    _store.grid.unshift(0);\n  }\n}\n\n/*\n * moves the _store.currentItem down one\n */\nfunction moveDown() {\n  if (_store.currentItem.length !== 0) {\n    let initialCurrentLength = _store.currentItem.length;\n    let sortedCurrentItem = _store.currentItem.sort(function(a, b) { return b - a });\n    let tempCurrent = sortedCurrentItem.map(addGravity);\n    //remove items where value is undefined\n    tempCurrent = tempCurrent.filter(function(element) {\n      return element !== undefined;\n    });\n    let processedCurrentLength = tempCurrent.length;\n    /*\n    // check length of new array is the same as initially set\n    // if there is a difference it implies that the current\n    // block cannot move so we should stop leave as is and\n    // render a new random shape\n    */\n    if (initialCurrentLength === processedCurrentLength) {\n      moveCurrent(tempCurrent);\n    } else {\n      dropNext();\n    }\n  }\n}\n\n\n/*\n * moves the _store.currentItem down one\n */\nfunction dropDownOne() {\n  // if (currentArray.length === 4) {\n  // let initialCurrentLength = _store.currentItem.length;\n  //sort in reverse numerical order\n  let sortedCurrentItem = _store.currentItem.sort(function(a, b) { return b - a });\n  // let tempCurrent = sortedCurrentItem.map(addGravity);\n  //remove items where value is undefined\n  // tempCurrent = tempCurrent.filter(function(element) {\n  //   return element !== undefined;\n  // });\n  let tempCurrent = sortedCurrentItem;\n\n\n  for (let i = 0; i <= _store.rows; i++) {\n    tempCurrent = tempCurrent.map(addGravity);\n    tempCurrent = tempCurrent.filter(function(element) {\n      return element !== undefined;\n    });\n    // console.log(tempCurrent);\n    if (tempCurrent.length === 4) {\n      moveCurrent(tempCurrent);\n    } else {\n      // dropNext();\n      return;\n    }\n  }\n\n}\n// if (tempCurrent.length === 4) {\n\n//   moveCurrent(tempCurrent);\n\n//   sortedCurrentItem = _store.currentItem.sort(function(a, b) { return b - a });\n//   tempCurrent = sortedCurrentItem.map(addGravity);\n//   //remove items where value is undefined\n//   tempCurrent = tempCurrent.filter(function(element) {\n//     return element !== undefined;\n//   });\n//   if (tempCurrent.length === 4) {\n//     moveCurrent(tempCurrent);\n//     // repeat until length < 4 at which point start agaain\n//   }\n// }\n\n// // }\n// }\n\n/*\n * moves the _store.currentItem down one\n */\nfunction dropDown() {\n\n  if (_store.currentItem.length === 4) {\n    dropDownOne();\n  } else {\n    dropNext();\n  }\n  // console.log('dropDown');\n  // if (_store.currentItem.length === 4) {\n  //   // let initialCurrentLength = _store.currentItem.length;\n  //   //sort in reverse numerical order\n  //   // _store.currentItem.sort(function(a, b) { return b - a });\n  //   // let tempCurrent = _store.currentItem.map(addGravity);\n  //   //remove items where value is undefined\n  //   // tempCurrent = tempCurrent.filter(function(element) {\n  //   //   return element !== undefined;\n  //   // });\n  //   // let tempCurrent = dropDownOne(tempCurrent);\n  //   console.log(tempCurrent);\n  //   if (_store.currentItem.length === 4) {\n  //     dropDownOne(tempCurrent);\n  //   } else {\n  //     dropNext();\n  //   }\n  // }\n}\n\n/*\n * Used to unpaint current item\n * update the currentItem in the store\n * update the new curreent shape and print on the canvas\n */\nfunction moveCurrent(tempCurrent) {\n  unPaintShape(_store.currentItem);\n  _store.currentItem = tempCurrent.slice(0);\n  updatePaintShape(_store.currentItem);\n}\n\n/*\n * start again\n */\nfunction dropNext() {\n  // reset current item\n  _store.currentItem.length = 0;\n  //check for filled rows\n  checkFilledRows();\n  // checkFilledRows();\n\n  //choose random shape\n  let randShape = chooseRandomShape();\n  paintShape(randShape);\n}\n\n/*\n * checks for any filled rows\n */\nfunction checkFilledRows() {\n  let tempGrid = _store.grid;\n\n  //counts through from high to low\n  for (let i = 0; i < _store.rows; i++) {\n\n    let tempLength = tempGrid.length;\n\n    let temp = tempGrid.slice(tempLength - ((_store.columns * i) + _store.columns), tempLength - (_store.columns * i));\n\n    //check each row for all matching ones\n    let count = 0;\n    //counts through from high to low\n    for (let j = 0; j < _store.columns; j++) {\n\n      let tempj = temp.slice((temp.length - 1) - j)[0];\n      if (tempj === 1) {\n        count = count + 1;\n\n      }\n    }\n    /* 1. get the row of items and remove from the\n     * 2. insert rows at the top\n     */\n    if (count === 10) {\n      console.log(\"10 in a row\");\n      _store.score = _store.score + 10;\n      if (_store.score > _store.highScore) {\n        _store.highScore = _store.score;\n        localStorage.setItem('highScore', _store.highScore);\n\n        console.log('new high score');\n      }\n      let tempLength2 = _store.grid.length;\n      _store.grid.splice(tempLength2 - ((_store.columns * i) + _store.columns), _store.columns);\n      // playTestInstrument();\n      playAudio();\n      addTop();\n      decreaseInterval();\n      // start timer again after decreasing interval in order for speed to decrease\n      startTimer();\n      // only removes one row - lets call again to check if more than one\n      checkFilledRows();\n    }\n  }\n\n}\n\n\n/*\n * item - should match the index in the stage\n * used by map to add increase each item so that it moves down one row\n */\nfunction addGravity(item, index, arr) {\n  let limit = _store.columns * _store.rows;\n  if (item < (_store.grid.length - _store.columns)) {\n    //add check to see if exists in currentItem, then we don't want to check for 1\n    if (_store.currentItem.includes(item + _store.columns)) {\n      if (item + _store.columns < limit) {\n        return item = item + _store.columns;\n      }\n    } else {\n      if (_store.grid[item + _store.columns] !== 1) {\n        if (item + _store.columns < limit) {\n          return item = item + _store.columns;\n        }\n      } else {\n        return;\n      }\n    }\n  } else {\n    return;\n  }\n}\n\n/*\n * item - should match the index in the stage\n * used by map to add increase each item so that it moves down one row\n */\nfunction moveLeftCurrent(item, index, arr) {\n  // if current shape has an item that is (index) % number_columns == 0\n  // then we cannot move left\n  //e.g. 0 1 2 3 4 5 6 7 8 9\n  //     10 11 12 13 14 15 16 17 18 19 20\n  // e.g. 0000111000\n  //      0000010000\n  // 4, 5, 6, 15 become\n  // 3 , 4, 5, 14\n\n  if (_store.currentItem.includes(item - 1)) {\n    return item = item - 1;\n  } else {\n    //check if first column\n    if (item % _store.columns !== 0) {\n      // need to also check if element already exists in grid\n      if (_store.grid[item - 1] !== 1) {\n        return item = item - 1;\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n}\n\n/*\n * item - should match the index in the stage\n * used by map to add increase each item so that it moves across one column\n */\nfunction moveRightCurrent(item, index, arr) {\n  if (_store.currentItem.includes(item + 1)) {\n    return item = item + 1;\n  } else {\n    //check if first column\n    if ((item + 1) % _store.columns !== 0) {\n      // need to also check if element already exists in grid\n      if (_store.grid[item + 1] !== 1) {\n        return item = item + 1;\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n}\n\n/*\n * starts game and sets state of game to 1\n */\nfunction startGame() {\n  //clear the grid here\n  playAudio();\n  clearGrid();\n  //reset the score\n  _store.score = 0;\n  //start the game\n  _store.state = 1;\n  // reset the interval\n  setInitialInterval();\n  let randShape = chooseRandomShape();\n  paintShape(randShape);\n}\n\n/*\n * clear grid\n */\nfunction clearGrid() {\n  _store.grid = StartGrid.slice(0);\n}\n\n/*\n * load local storage including high score\n */\nfunction loadLocalStorage() {\n  _store.highScore = localStorage.getItem('highScore') || '0';\n}\n\n\n/*\n * stop game\n */\nfunction stopGame() {\n  // if (_store.highscore < _store.state) {\n  //   // _store.highscore = _store.state;\n  //   console.log('new high score');\n  // }\n  _store.state = 0;\n\n  console.log('stop game');\n}\n\n/*\n * make decreace the applications interval state\n */\nfunction decreaseInterval() {\n  _store.interval = _store.interval - (_store.interval * .1);\n  // clear on window object\n  clearInterval(gameInterval);\n}\n\n/*\n * reset decreace the applications interval state\n */\nfunction setInitialInterval() {\n  _store.interval = 1000;\n  if (_store.timer > 0) {\n    clearInterval(gameInterval);\n  }\n}\n\n//declare in global scope\nvar gameInterval;\n/*\n * start timer\n */\nfunction startTimer() {\n  gameInterval = window.setInterval(startTimerCallback, _store.interval);\n}\n\n/*\n * start timer calback\n */\nfunction startTimerCallback() {\n  if (_store.state === 1) {\n    _store.timer = _store.timer + 1;\n    moveDown();\n    GridsterStore.emit(CHANGE_EVENT);\n  } else {\n    return;\n  }\n}\n\n/*\n * map keys to functions\n */\nfunction keyMap(key) {\n  switch (key) {\n    case 'Space':\n      if (_store.state > 0) {\n        dropDown();\n      }\n      break;\n    case 'ArrowDown':\n      if (_store.state > 0) {\n        turnClockwise();\n      }\n      break;\n    case 'ArrowUp':\n      if (_store.state > 0) {\n        turnAnticlockwise();\n      }\n      break;\n    case 'ArrowLeft':\n      if (_store.state > 0) {\n        moveLeft();\n      }\n      break;\n    case 'ArrowRight':\n      if (_store.state > 0) {\n        moveRight();\n      }\n      break;\n    default:\n      return;\n  }\n}\n\n// Register each of the actions with the dispatcher\n// by changing the store's data and emitting a\n// change\nAppDispatcher.register((payload) => {\n\n  const action = payload.action;\n\n  switch (action.actionType) {\n\n    case GridsterConstants.UPDATE_ITEM:\n\n      _store.grid.push(action.value);\n      GridsterStore.emit(CHANGE_EVENT);\n\n      break;\n\n    case GridsterConstants.UPDATE_ROW:\n\n      _store.rows = action.value;\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.UPDATE_COL:\n\n      _store.columns = action.value;\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.UPDATE_GRAVITY:\n      // moveDown();\n      if (_store.state > 0) {\n        dropDown();\n      }\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.MOVE_RIGHT:\n      // call function to update store here = add 10 cells to beginning - remove 10 cells at the end\n      if (_store.state > 0) {\n        moveRight();\n      }\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.MOVE_LEFT:\n      // call function to update store here = add 10 cells to beginning - remove 10 cells at the end\n      if (_store.state > 0) {\n        moveLeft();\n      }\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.MOVE_ANTICLOCKWISE:\n      // call function to update store here = add 10 cells to beginning - remove 10 cells at the end\n      if (_store.state > 0) {\n        turnAnticlockwise();\n      }\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n      \n    case GridsterConstants.MOVE_CLOCKWISE:\n      // call function to update store here = add 10 cells to beginning - remove 10 cells at the end\n      if (_store.state > 0) {\n        turnClockwise();\n      }\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.START_GAME:\n      // call function to update store here = add 10 cells to beginning - remove 10 cells at the end\n      startGame();\n      startTimer();\n\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.GENERATE_GRID:\n\n      let total = _store.columns * _store.rows;\n\n      let newCells = [];\n\n      for (let i = 0; i < total; i++) {\n        newCells.push({ 'id': i, 'clicked': \"false\", 'state': \"initial\", 'x': xcoord(i), 'y': ycoord(i), 'path': null, 'flag': false, 'counter': Infinity });\n      }\n\n      _store.grid = newCells;\n\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.GENERATE_CLICK:\n\n      let clickIndex = _store.grid.findIndex((obj => obj.id === parseInt(action.value, 10)));\n\n      if (_store.grid[clickIndex].clicked === \"false\" && clickIndex !== _store.start.id && clickIndex !== _store.end.id) {\n        _store.grid[clickIndex].clicked = \"true\";\n      } else if (_store.grid[clickIndex].clicked === \"true\" && clickIndex !== _store.start.id && clickIndex !== _store.end.id) {\n        _store.grid[clickIndex].clicked = \"false\";\n        //\n      }\n\n      GridsterStore.emit(CHANGE_EVENT);\n\n      break;\n\n\n    case GridsterConstants.MOUSE_ENTER:\n\n      let enterIndex = _store.grid.findIndex((obj => obj.id === parseInt(action.value, 10)));\n\n      _store.grid[enterIndex].state = \"hover\";\n\n      GridsterStore.emit(CHANGE_EVENT);\n\n      break;\n\n    case GridsterConstants.MOUSE_EXIT:\n\n      let exitIndex = _store.grid.findIndex((obj => obj.id === parseInt(action.value, 10)));\n\n      _store.grid[exitIndex].state = \"initial\";\n\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.MOUSE_DOWN:\n\n      // let downIndex = _store.grid.findIndex((obj => obj.id === parseInt(action.value, 10)));\n\n      // _store.grid[downIndex].state = \"down\";\n\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.KEY_DOWN:\n      // console.log(action);\n\n      keyMap(action.key);\n\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n    case GridsterConstants.LOCAL_STORAGE:\n      // console.log(action);\n\n      loadLocalStorage();\n\n      GridsterStore.emit(CHANGE_EVENT);\n      break;\n\n\n    default:\n      return;\n  }\n\n});\n\nexport default GridsterStore;","// Todo app dispatcher with actions responding to both\n// view and server actions\nimport { Dispatcher } from 'flux';\n\nclass DispatcherClass extends Dispatcher {\n\n  handleViewAction(action) {\n    this.dispatch({\n      source: 'VIEW_ACTION',\n      action: action,\n    });\n  }\n\n  handleServerAction(action) {\n    this.dispatch({\n      source: 'SERVER_ACTION',\n      action: action,\n    });\n  }\n}\n\nconst AppDispatcher = new DispatcherClass();\n\nexport default AppDispatcher;\n\n\n","// Gridster constants\nexport const GridsterConstants = {\n  UPDATE_ITEM: 'UPDATE_ITEM',\n  UPDATE_ROW: 'UPDATE_ROW',\n  UPDATE_COL: 'UPDATE_COL',\n  UPDATE_GRID: 'UPDATE_GRID',\n  GENERATE_GRID: 'GENERATE_GRID',\n  GENERATE_CLICK: 'GENERATE_CLICK',\n  GENERATE_START: 'GENERATE_START',\n  GENERATE_END: 'GENERATE_END',\n  KEY_DOWN: 'KEY_DOWN',\n  LOCAL_STORAGE: 'LOCAL_STORAGE',\n  MOUSE_ENTER: 'MOUSE_ENTER',\n  MOUSE_EXIT: 'MOUSE_EXIT',\n  MOUSE_DOWN: 'MOUSE_DOWN',\n  MOVE_LEFT: 'MOVE_LEFT',\n  MOVE_ANTICLOCKWISE: 'MOVE_ANTICLOCKWISE',\n  MOVE_CLOCKWISE: 'MOVE_CLOCKWISE',\n  MOVE_RIGHT: 'MOVE_RIGHT',\n  START_GAME: 'START_GAME',\n  UPDATE_GRAVITY: 'UPDATE_GRAVITY',\n};","export const StartGrid = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n];\n\n// let StartGrid = new Int16Array(200);","export var OrganTables = {\n  'real': [\n    0.000000, -0.000000, -0.042008,\n    0.010474, -0.138038,\n    0.002641, -0.001673,\n    0.001039, -0.021054,\n    0.000651, -0.000422,\n    0.000334, -0.000236,\n    0.000191, -0.000161,\n    0.000145, -0.018478,\n    0.000071, -0.000066,\n    0.000047, -0.000044,\n    0.000041, -0.000034,\n    0.000031, -0.000030,\n    0.000028, -0.000025,\n    0.000024, -0.000022,\n    0.000020, -0.000015,\n    0.000013, -0.011570,\n    0.000004, -0.000003,\n    0.000003, -0.000003,\n    0.000003, -0.000003,\n    0.000002, -0.000002,\n    0.000002, -0.000002,\n    0.000002, -0.000002,\n    0.000002, -0.000002,\n    0.000002, -0.000001,\n    0.000001, -0.000001,\n    0.000001, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000898,\n    0.000001, -0.000001,\n    0.000001, -0.000001,\n    0.000001, -0.000001,\n    0.000001, -0.000001,\n    0.000001, -0.000001,\n    0.000001, -0.000001,\n    0.000001, -0.000001,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000245,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000106,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000003,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000,\n  ],\n  'imag': [\n    0.000000,\n    0.196487, -0.000000,\n    0.000000, -0.000003,\n    0.000000, -0.000000,\n    0.000000, -0.000002,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000007,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000018,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000006,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000006,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000010,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000001,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n    0.000000, -0.000000,\n  ],\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n\n  constructor(props) {\n    super(props);\n    this._onMouseEnter = this._onMouseEnter.bind(this);\n    this._onMouseLeave = this._onMouseLeave.bind(this);\n    this._onMouseDown = this._onMouseDown.bind(this);\n\n    this.state = {\n      state: \"default\"\n    };\n\n  }\n\n  _onMouseEnter(event) {\n    return this.setState({state: \"hover\"});\n  }\n\n  _onMouseLeave(event) {\n    return this.setState({state: \"default\"});\n  }\n\n  _onMouseDown(event) {\n    return this.setState({state: \"down\"});\n  }\n\n  render() {\n\n    let itemColour = '#4a90e2';\n    if (this.state.state === \"default\"){\n      itemColour = '#4a90e2';\n    }\n    if (this.state.state === \"hover\"){\n      itemColour = '#76b5ff';\n    }\n    if (this.state.state === \"down\"){\n      itemColour = '#235896';\n    }\n\n    return (\n\n        <button\n          onMouseEnter={this._onMouseEnter}\n          onMouseLeave={this._onMouseLeave}\n          onMouseDown={this._onMouseDown}\n          type=\"button\"\n          onClick={this.props.onclick}\n          disabled={this.props.disabled}\n          style={{\n              // marginLeft: '.4rem',\n              borderRadius: '.4rem',\n              border: 'solid 1px #ccc',\n              padding: '0.4rem 1rem',\n              color: 'white',\n              fontSize: '1rem',\n              // margin: '0 1rem',\n              // marginTop: '13px',\n              cursor: 'pointer',\n              background: itemColour}}>\n          {this.props.text}\n        </button>\n\n    );\n  }\n\n}\n\nButton.propTypes = {\n  text: PropTypes.string\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GridsterStore from '../stores/GridsterStore.js';\n\nimport { generateClick, mouseEnter, mouseExit, mouseDown } from '../actions/GridsterActions.js';\n\nexport default class GridItem extends Component {\n\n  constructor(props) {\n    super(props);\n    this._widthCalc = this._widthCalc.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onMouseEnter = this._onMouseEnter.bind(this);\n    this._onMouseLeave = this._onMouseLeave.bind(this);\n    this._onMouseDown = this._onMouseDown.bind(this);\n\n    this.state = {\n      columns: 8,\n      rows: 12\n    };\n  }\n\n  componentDidMount() {\n    GridsterStore.addChangeListener(this._onChange);\n    this.setState(GridsterStore.getGrid());\n  }\n\n  componentWillUnmount() {\n    GridsterStore.removeChangeListener(this._onChange);\n  }\n\n  _onChange() {\n    this.setState(GridsterStore.getGrid());\n  }\n\n\t_widthCalc(x) {\n\t\treturn 100 / x;\n\t}\n\n  _onClick(event) {\n    generateClick(event.target.id);\n    // shortPath();\n  }\n\n  _onMouseEnter(event) {\n    mouseEnter(event.target.id);\n  }\n\n  _onMouseLeave(event) {\n    mouseExit(event.target.id);\n  }\n\n  _onMouseDown(event) {\n    mouseDown(event.target.id);\n  }\n\n  render() {\n\n    let itemColour = 'rgba(241, 241, 241, 0.8)';\n\n    if (this.state.grid !== undefined && this.props.text === 1) {\n      itemColour = 'rgba(1, 1, 1, .7)';\n    }\n\n   return (\n\n    <li\n      id={this.props.id}\n      // onClick={this._onClick}\n      // onMouseEnter={this._onMouseEnter}\n      // onMouseLeave={this._onMouseLeave}\n      // onMouseDown={this._onMouseDown}\n      // clicked={this.state.clicked}\n      style={{\n        display: 'inline-block',\n        float: 'left',\n        width: this._widthCalc(this.state.columns)+'%',\n        background: itemColour,\n        cursor: 'pointer',\n        paddingBottom: this._widthCalc(this.state.columns)+'%',\n        outline: 'solid 1px rgba(0, 0, 0, 0.2)'}}>\n    </li>\n\n    );\n\n  }\n\n}\n\nGridItem.propTypes = {\n  id: PropTypes.number\n};\n","// Gridster actions\nimport AppDispatcher from '../dispatcher/AppDispatcher';\nimport { GridsterConstants } from '../constants/GridsterConstants';\n\nexport function updateColumn(value) {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.UPDATE_COL,\n    value: value\n  });\n}\n\nexport function updateRow(value) {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.UPDATE_ROW,\n    value: value\n  });\n}\n\nexport function updateGrid() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.UPDATE_GRID\n  });\n}\n\nexport function generateGrid() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.GENERATE_GRID\n  });\n}\n\nexport function generateClick(value) {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.GENERATE_CLICK,\n    value: value\n  });\n}\n\nexport function mouseEnter(value) {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.MOUSE_ENTER,\n    value: value\n  });\n}\n\nexport function mouseExit(value) {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.MOUSE_EXIT,\n    value: value\n  });\n}\n\nexport function mouseDown(value) {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.MOUSE_DOWN,\n    value: value\n  });\n}\n\nexport function generateStart() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.GENERATE_START\n  });\n}\n\nexport function generateEnd() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.GENERATE_END\n  });\n}\n\nexport function updateGravity() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.UPDATE_GRAVITY\n  });\n}\n\nexport function moveRight() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.MOVE_RIGHT\n  });\n}\n\nexport function moveLeft() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.MOVE_LEFT\n  });\n}\n\nexport function moveClockwise() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.MOVE_CLOCKWISE\n  });\n}\n\nexport function moveAnticlockwise() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.MOVE_ANTICLOCKWISE\n  });\n}\n\nexport function startGame() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.START_GAME\n  });\n}\n\nexport function keyDown(key) {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.KEY_DOWN,\n    key: key\n  });\n}\n\nexport function loadLocalStorage() {\n  AppDispatcher.handleViewAction({\n    actionType: GridsterConstants.LOCAL_STORAGE\n  });\n}","import React, { Component } from 'react';\nimport GridItem from './GridItem';\nimport PropTypes from 'prop-types';\n\nconst ulStyle = {\n\tdisplay: 'inline-block',\n\tfloat: 'left',\n\twidth: '100%',\n\tlistStyleType: 'none',\n\tpadding: 0,\n\tmargin: 0\n}\n\nexport default class Grid extends Component {\n\n  render() {\n    // console.log('GRID here');\n    // console.log('this.props', this.props);\n\n   let rows = [];\n    if ((this.props.rows * this.props.columns) > 0) {\n        // console.log('this.props.rows * this.props.columns', this.props.rows * this.props.columns);\n        // console.log('this.props.grid', this.props.grid);\n\n      this.props.grid.map((item, index) => {\n        // console.log('this.props.grid[item]', this.props.grid[index]);\n        return rows.push(\n  \t\t\t<GridItem key={index} id={index} text={this.props.grid[index]}/>\n  \t\t\t);\n      });\n    }\n\n    return (\n    <ul style={ulStyle}>\n    \t{rows}\n    </ul>\n    );\n  }\n\n}\n\nGrid.propTypes = {\n  grid: PropTypes.array\n  //key special prop\n};\n","import React, { Component } from 'react';\n\nimport GridsterStore from '../stores/GridsterStore.js';\nimport Button from './Button';\n// import Input from './Input';\nimport Grid from './Grid';\nimport { updateRow, updateColumn, generateGrid, generateStart, generateEnd, updateGravity, moveClockwise, moveAnticlockwise, startGame, moveRight, moveLeft, keyDown, loadLocalStorage} from '../actions/GridsterActions.js';\n// import { EventEmitter } from 'events';\n\nfunction inputValidation(value) {\n  //check for number input\n  if(typeof value === 'number') {\n  //check value is <= || 20 > 0\n    if(value <= 20 && value > 0){\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nexport default class GridWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this._onChangeCols = this._onChangeCols.bind(this);\n    this._onChangeRows = this._onChangeRows.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onGenerateGrid = this._onGenerateGrid.bind(this);\n    this._onGravity = this._onGravity.bind(this);\n    this._onRight = this._onRight.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.xDown = null;\n    this.yDown = null;\n    this.xPos = null;\n    this.yPos = null;\n    this.state = {\n      columns: 10,\n      rows: 20,\n      grid: [],\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n    loadLocalStorage();\n    document.addEventListener(\"keydown\", this._onKeyDown.bind(this));\n    document.addEventListener('touchstart', this.handleTouchStart.bind(this), false);\n    document.addEventListener('touchmove', this.handleTouchMove.bind(this), false);\n    // remove window listener - scrolls window\n    window.addEventListener(\"keydown\", function(event) {\n      // space and arrow keys\n      if([32, 37, 38, 39, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n      }\n    }, false);\n  //   window.addEventListener(\"touchmove\", function( event ) {\n  //     event.preventDefault();\n  //     console.log('window touch')\n  //     return;\n  //     // console.log('window touch')\n  //     // let touch = event.touches[ 0 ];\n  //     // console.log(touch);\n  //     // let oldX = this.xPos;\n  //     // let oldY = this.yPos;\n  //     // this.xPos = touch.pageX;\n  //     // // console.log(this.xPos)\n  //     // this.yPos = touch.pageY;\n  //     // console.log(this.yPos)\n\n  //     // if ( oldX == null && oldY == null ) {\n  //     //   console.log('false 1');\n  //     //   event.preventDefault();\n\n  //     //     return false;\n  //     // }\n  //     // else {\n  //     //   console.log('false 2');\n\n  //     //     if ( Math.abs( oldX-this.xPos ) > 0 || Math.abs( oldY-this.yPos ) > 0 ) {\n  //     //       console.log('false 22');\n\n  //     //         event.preventDefault();\n  //     //         return false;\n  //     //     }\n  //     // }\n  // } );\n  }\n\n  componentDidMount() {\n    GridsterStore.addChangeListener(this._onChange);\n    this.setState(GridsterStore.getGrid());\n  }\n\n  componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this._onKeyDown.bind(this));\n      document.removeEventListener(\"touchstart\", this.handleTouchStart.bind(this));\n      document.removeEventListener(\"touchmove\", this.handleTouchMove.bind(this));\n    // restore remove window listener - scrolls window\n      window.removeEventListener(\"keydown\", function(e) {\n        // space and arrow keys\n        if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n    GridsterStore.removeChangeListener(this._onChange);\n  }\n\n  _onChange() {\n    this.setState(GridsterStore.getGrid());\n  }\n\n  _onChangeRows(event) {\n    let value = parseInt(event.target.value, 10);\n    if (inputValidation(value)) {\n      this.setState({\n        rows: value\n      });\n   }\n  }\n\n  handleTouchStart(event) {\n    event.preventDefault();\n    // console.log('handleTouchStart');\n    this.xDown =  event.touches[0].clientX;\n    this.yDown = event.touches[0].clientY;\n}\n\n handleTouchMove(event) {\n  // console.log('handleTouchMove');\n  event.preventDefault();\n\n  if ( ! this.xDown || ! this.yDown ) {\n      return;\n  }\n\n  this.xUp = event.touches[0].clientX;\n  this.yUp = event.touches[0].clientY;\n\n  this.xDiff = this.xDown - this.xUp;\n  this.yDiff = this.yDown - this.yUp;\n\n  if ( Math.abs( this.xDiff ) > Math.abs( this.yDiff ) ) {/*most significant*/\n      if ( this.xDiff > 0 ) {\n          /* left swipe */\n          // console.log('swipe left')\n          this._onLeft()\n\n      } else {\n          /* right swipe */\n          // console.log('swipe right')\n          this._onRight()\n      }\n  } else {\n      if ( this.yDiff > 0 ) {\n          /* up swipe */\n          // console.log('swipe up')\n          this._onRotateClockwise();\n\n      } else {\n          /* down swipe */\n          // console.log('swipe down')\n          this._onGravity();\n      }\n  }\n  /* reset values */\n  this.xDown = null;\n  this.yDown = null;\n}\n\n  _onChangeCols(event) {\n    let value = parseInt(event.target.value, 10);\n    if (inputValidation(value)) {\n    this.setState({\n      columns: value\n    });\n   }\n  }\n\n  _onGenerateGrid() {\n    updateColumn(this.state.columns);\n    updateRow(this.state.rows);\n    generateGrid();\n    generateStart();\n    generateEnd();\n  }\n\n  _onGravity() {\n    updateGravity();\n  }\n\n  _onRight() {\n    moveRight();\n  }\n\n  _onLeft() {\n    moveLeft();\n  }\n\n  _onRotateClockwise() {\n    moveClockwise();\n  }\n  \n  _onRotateAnticlockwise() {\n    moveAnticlockwise();\n  }\n\n  _startGame() {\n    startGame();\n  }\n\n  _onKeyDown(e) {\n    keyDown(e.code);\n  }\n\n  render() {\n    const enabled = this.state.state < 1;\n    return (\n      <div className=\"container\" >\n        <div className=\"inner-container\" >\n          <span className=\"score\">Score: {this.state.score} </span>\n          <span className=\"score--high\">High Score: {this.state.highScore}</span>\n          <form className=\"form-container\">\n            <Button text=\"Left\" onclick={this._onLeft} />\n            <Button text=\"Right\" onclick={this._onRight} />\n            <Button text=\"Down\" onclick={this._onGravity} />\n            <Button text=\"Clockwise\" onclick={this._onRotateClockwise} />\n            <Button text=\"Anticlockwise\" onclick={this._onRotateAnticlockwise} />\n\n            <Button text=\"Start\" disabled={!enabled} onclick={this._startGame} />\n\n          </form>\n        </div>\n        <div className=\"inner-container\" >\n        {/* <span>{this.state.audioUnlocked ? 'unlocked' : 'locked'}</span> */}\n\n          <Grid\n            grid={this.state.grid} columns=\"10\" rows=\"15\"\n          />\n        </div>\n    </div>\n    );\n  }\n\n}\n\n","import React, { Component } from 'react'\nimport Lottie from 'react-lottie'\nimport animationData from '../data/joyful.json'\n\nclass UncontrolledLottie extends Component {\n\n\n  render(){\n\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: animationData,\n      rendererSettings: {\n        scaleMode: 'noScale'\n      }\n    };\n\n    return(\n      <div className={'App-lottie'}>\n        <Lottie options={defaultOptions} />\n      </div>\n    )\n  }\n}\n\nexport default UncontrolledLottie","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport GridWidget from './components/GridWidget';\nimport UncontrolledLottie from './components/UncontrolledLottie';\n\n// import MIDISounds from 'midi-sounds-react';\n\nclass App extends Component {\n  render() {\n    return ( <div className = \"App\" >\n      {/* <header className = \"App-header\" >\n      <img src = { logo }\n      className = \"App-logo\"\n      alt = \"logo\" />\n      </header> */}\n      <h1 className = \"App-intro\" >Tetris. </h1>\n      {/* <p className=\"App-intro\">Press Play to play instrument sound.</p> */}\n      {/* <p><button onClick={this.playTestInstrument.bind(this)}>Play</button></p> */}\n        {/* <MIDISounds ref={(ref) => (this.midiSounds = ref)} appElementName=\"root\" drums={[0]}  /> */}\n\n      <p>Use can use the arrow keys to move the block around.</p>\n      <div className=\"container-lottie\" >\n        <UncontrolledLottie></UncontrolledLottie>\n\n      </div>\n        <GridWidget columns = \"10\"\n      rows = \"15\" />\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}